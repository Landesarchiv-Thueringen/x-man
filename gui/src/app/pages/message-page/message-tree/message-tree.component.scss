@use "sass:map";
@use "@angular/material" as mat;
@use "../../../../styles/mixins";

:host {
  display: flex;
  flex-direction: column;
  height: 100%;
}

.message-toggle {
  margin-left: 1em;
  background-color: var(--mat-app-background-color);
}

.actions {
  display: flex;
  margin: 1em;
  flex-shrink: 0;
  column-gap: 0.5em;
  justify-content: center;
}

.message-tree {
  flex-grow: 1;
  margin-top: 2em;
  margin-left: 2em;
  overflow: auto;
}

mat-tree-node {
  display: flex;
  flex-direction: column;
  align-items: stretch;
  margin-bottom: 0.4em;
  margin-right: 2em;
}

.root-node {
  position: sticky;
  top: 0;
  z-index: 2;
  background-color: var(--mat-app-background-color);
}

.filters {
  margin-left: 40px;
}

.filters-hint {
  margin-top: 0.5em;
  color: var(--mat-secondary);
}

.node {
  // z-index is needed for the background of .overlay-button.active to be
  // visible
  z-index: 0;
  position: relative;
  display: flex;
  align-items: center;
  border-radius: 30px;
  padding: 4px;
  margin-bottom: 0.4em;
}

.secondary-text {
  color: var(--mat-secondary);
}

.expand-button {
  // Draw above overlay-button
  z-index: 1;
}

.overlay-button {
  @include mixins.overlayButton;
  &.active {
    // Prevent hover effects that only trigger on the node's padding area
    pointer-events: none;
    // Draw a background behind the node
    z-index: -1;
    background-color: var(--mat-primary-90);
  }
}

.node-info {
  display: flex;
  flex-direction: row;
  flex-grow: 1;
  align-items: center;

  .mat-icon {
    // important icons shrink when overflow occurs
    flex-shrink: 0;
  }
}

.node-title {
  display: flex;
  flex-direction: column;
  word-break: break-word;
  padding-right: 4em;
  line-height: 1.25em;
  .node-subtitle-line {
    font-weight: 500;
  }
}

.appraisal-symbol {
  font-weight: bold;
  width: 48px; // icon width for alignment
  text-align: center;
}

.packaging-indicator {
  display: inline-flex;
  align-items: center;
  gap: 1em;
  font-weight: bold;
  padding: 0 12px;
  .files-count {
    color: mat.m2-get-color-from-palette(mat.$m2-indigo-palette, 500);
  }
  .processes-count {
    color: green;
  }
  .other-count {
    color: orange;
  }
  mat-icon {
    color: var(--mdc-icon-button-icon-color);
  }
}

.message-icon {
  color: mat.m2-get-color-from-palette(mat.$m2-indigo-palette, 500);
  margin-right: 0.5em;
}

.file-icon {
  color: mat.m2-get-color-from-palette(mat.$m2-indigo-palette, 500);
  margin-right: 0.5em;
}

.process-icon {
  color: green;
  margin-right: 0.5em;
}

.document-icon {
  color: orange;
  margin-right: 0.5em;
}

.attachment-icon {
  margin-right: 0.5em;
}

.primary-documents-icon {
  color: mat.m2-get-color-from-palette(mat.$m2-indigo-palette, 500);
  margin-right: 0.5em;
}

mat-checkbox.hidden {
  visibility: hidden;
}

.lifetime-filter-content {
  display: flex;
  flex-direction: column;
  mat-radio-group {
    margin: 4px 0;
  }
  .hbox {
    display: flex;
    gap: 1em;
    padding-left: 44px;
  }
  mat-form-field {
    margin-top: 12px;
  }
}
